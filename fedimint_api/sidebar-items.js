window.SIDEBAR_ITEMS = {"constant":[["FIELDS",""]],"enum":[["ParseAmountError",""],["__Field",""]],"fn":[["msats","Shorthand for [`Amount::from_msats`]"],["sats","Shorthand for [`Amount::from_sats`]"]],"macro":[["__api_endpoint","Example"],["_dyn_newtype_define_inner",""],["_dyn_newtype_define_with_instance_id_inner",""],["_dyn_newtype_impl_deref_mut",""],["dyn_newtype_define","Define “dyn newtype” (a newtype over `dyn Trait`)"],["dyn_newtype_define_with_instance_id",""],["dyn_newtype_impl_dyn_clone_passhthrough","Implement `Clone` on a “dyn newtype”"],["dyn_newtype_impl_dyn_clone_passhthrough_with_instance_id",""],["module_dyn_newtype_impl_encode_decode","Implement `Encodable` and `Decodable` for a “module dyn newtype”"],["module_plugin_trait_define","Define a “plugin” trait"],["plugin_types_trait_impl","Implements the necessary traits for all associated types of a `FederationServer` module."],["push_db_key_items",""],["push_db_pair_items",""],["push_db_pair_items_no_serde",""]],"mod":[["bitcoin_rpc",""],["cancellable",""],["config",""],["core","Fedimint Core API (common) module interface"],["db",""],["encoding","This module defines a binary encoding interface which is more suitable for consensus critical encoding thant e.g. `bincode`. Over time all structs that need to be encoded to binary will be migrated to this interface."],["fmt_utils",""],["hex",""],["macros",""],["module",""],["net",""],["task",""],["tiered",""],["tiered_multi",""],["time",""]],"struct":[["Amount","Represents an amount of BTC inside the system. The base denomination is milli satoshi for now, this is also why the amount type from rust-bitcoin isn’t used instead."],["Feerate",""],["OutPoint","`OutPoint` represents a globally unique output in a transaction"],["PeerId",""],["TransactionId","A transaction id for peg-ins, peg-outs and reissuances"],["__FieldVisitor",""],["__Visitor",""]],"trait":[["BitcoinHash","Trait which applies to hashes of all types."],["NumPeers","for consensus-related calculations given the number of peers"]]};